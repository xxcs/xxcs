英语：
vertical: 垂直的
horizontal: 水平的

概念相关：
第三章
    1.表面三维图：该数据定义为(X, Y)的函数Z，数学表示为Z=f(X, Y)
        举例:绘制Z = sin(sqrt(X2+Y2))

程序相关：
颜色的表示方法：1.#000000 - #FFFFFF
                2.'r'红色，'g'绿色，'b'蓝色
                3.[1, 0, 0]红色， [0, 1, 0]绿色，[0, 0, 1]蓝色
一.numpy库（import numpy as np）
    1) np.arange
    1.函数名：np.arange
    2.定义：arange(start=None, stop=None, step=None, dtype=None)
    3.参数：dtype表示numpy的多维数组的元素的数据类型
    4.作用：返回一个有终点和起点的固定步长的排列
    5.实例
    >>> np.arange(0, 10, 0.4, np.float16)
        array([0.   , 0.4  , 0.8  , 1.199, 1.6  , 2.   , 2.398, 2.799, 3.2  ,
        3.6  , 4.   , 4.4  , 4.797, 5.2  , 5.598, 6.   , 6.4  , 6.797,
        7.2  , 7.598, 8.   , 8.4  , 8.8  , 9.195, 9.59 ], dtype=float16)
    6.应用场景

    2) np.meshgrid
    1.函数名：np.meshgrid
    2.定义：def meshgrid(*xi, **kwargs)
    3.参数：
    4.作用：从一个坐标向量中返回一个坐标矩阵
    5.实例
    6.应用场景：【可以利用meshgrid函数生成的坐标矩阵画网格】

    3) np.sqrt
    1.函数名：np.sqrt
    2.定义：def sqrt(x, *args, **kwargs)
    3.参数：
    4.作用：计算数组各元素的平方根
    5.实例
    6.应用场景：【可以利用meshgrid函数生成的坐标矩阵画网格】

二.matplotlib
    matplotlib简介：https://www.cnblogs.com/yinheyi/p/6056314.html
    https://absentm.github.io
    matplotlib实际上为面向对象的绘图库，它所绘制的每个元素都有一个对象与之对应的。
    figure就是一个图啦，axes表示图上的一个画图区域啦，一个图上可以有多个画图区域的啦，意思就是说，一个图上可以有多个子图啊。
    用函数plt.gcf(）与plt.gca()分别得到当前的figure与axes。（get current figure, get current axes)
    plt.sca()函数实现把一个axes对象作为当前的axes（切换），plt.figure()即可创建也可切换

    配置查看属性：
        配置属性（3种方法）：调用对象的方法set_属性名()；通过对象的方法set()；通过pyplot模块提供的setp()函数


    1）matplotlib.pylab
        1.介绍：pylab将pyplot与numpy结合到一个命名空间中，对于交互式工作很方便，对于编程，建议将命名空间保持独立
    2) matplotlib.pyplot(import matplotlib.pyplot as plt)
        1.介绍：matplotlib.pyplot是一系列控制样式的（命令行风格）函数的集合，
        每一个pyplot函数对一幅图片（figure）做出一些改动（创建新图片，在一个figure中创建一些新的作图区域（plotting area），
        在一个作图区域内画直线，给图添加标签（label））
        matplotlib.pyplot是有状态的，亦即它会保存当前图片和作图区域的状态，新的作图函数会作用在当前图片的状态基础之上

    3）plt.figure()
        1.介绍：
        2.定义：figure(num=None, figsize=None, dpi=None, facecolor=None, edgecolor=None, frameon=True, FigureClass=Figure, clear=False, **kwargs)
        3.参数：
            num:如果此参数没有提供，则一个新的figure对象将被创建，同时增加figure的计数数值，此数值被保存在figure对象的一个数字属性当中。如果有此参数，且存在对应id的figure对象，则激活对于id的figure对象。如果对应id的figur对象不存在，则创建它并返回它。如果num的值是字符串，则将窗口标题设置为此字符串
            figsize:以英寸为单位的宽高，缺省值为rcParams["figure.figsize"]=[6.4, 4.8] (1英寸等于2.54厘米)
            dpi: 图形分辨率,缺省值为rcParams["figure.dpi"]= 100
            facecolor:背景颜色，rcParams["figure.facecolor"]= 'w'
            edgecolor:边框颜色，rcParams["figure.edgecolor"]= 'w'
            frameon: 默认为true为绘制边框，如果为False则不绘制边框
            FigureClass: Figure派生类，从派生类创建figure实例
            clear: 如果为True并且该图已存在，那么它将被清除
        4.返回值：一个Figure对象(fig)。Figure返回的实例也将传递给后端的new_figure_manager，这允许将自定义Figure类挂接到pyplot接口。其他kwargs将传递给Figure init函数
        5.fig.suptitle('My topic', x='0.5', y='0.98')：添加主题，参数分别为主题名，在x轴的相对位置（1），在y轴的相对位置（1）
        6.其它：图像分辨率指图像中存储的信息量，是每英寸图像内有多少个像素点，分辨率的单位为PPI(Pixels Per Inch)，通常叫做像素每英寸
    4) plt.colse()
        1.介绍：
        2.定义：close(*args)
        3.参数：
            None: the current figure(当前figure)
            Figure: the given Figure instance(给定的Figure实例)
            int: a figure number
            str: a figure name
            all: all figures
        4.返回值None
    5) plt.errorbar()
        1.介绍：绘制误差棒图
        2.定义：errorbar(x, y, yerr=None, xerr=None, fmt='', ecolor=None, elinewidth=None,
             capsize=None, barsabove=False, lolims=False, uplims=False,
             xlolims=False, xuplims=False, errorevery=1, capthick=None,
             hold=None, data=None, **kwargs)
        3.参数
            x,y:标量或数组，数据位置
            xerr, yerr:标量或类似数组，shape(N,)或shape(2, N)
                标量：所有数据点的对称+/-值
                shape(N,):每个数据点的对称+/-值
                shape(2, N): 第一排是较低的误差，第二排是较高的误差
            fmt:
            ecolor: 误差棒的颜色，默认使用连接线的颜色
            elinewidth: 标量，误差棒的线宽。If None, the linewidth of the current style is used.
            capsize: 标量

            lolims，uplims，xlolims，xuplims ： bool，可选， 使用带反转轴的限制，set_xlim() 或set_ylim()必须先调用errorbar()

            errorevery: 正整数，默认值为1。对误差棒进行子采样，如果errorevery=5,将绘制每隔5个数据点的误差棒，数据本身仍然显示所有数据点
            4. 返回： ErrorbarContainer
                The container 包含：plotline, caplines, barlinecols
    7) matplotlib.collections
    高效绘制大量包含相同属性的对象的集合
